Turn 0, A (Grad): Yeah , I think I got my mike on . OK . Let 's see .
Turn 1, B (Professor): OK . Ami , do yours then we 'll open it and I think it 'll be enough .
Turn 2, A (Grad): Mmm {disfmarker} Doesn't , uh {disfmarker} It should be the other way . Yeah , now it 's on .
Turn 3, F (PhD): Right . OK .
Turn 4, B (Professor): OK . So , we all switched on ?
Turn 5, A (Grad): We are all switched on , yeah .
Turn 6, B (Professor): Alright . Anyway . So , uh , before we get started with the , uh , technical part , I just want to review what I think is happening with the {disfmarker} our data collection .
Turn 7, F (PhD): We are all switched on .
Turn 8, B (Professor): So {disfmarker} {vocalsound} Uh , probably after today , {vocalsound} that shouldn't come up in this meeting . Th - this {disfmarker} this is s should be im it isn't {disfmarker} There 's another thing going on of gathering data , and that 's pretty much independent of this . But , uh , I just want to make sure we 're all together on this . What we think is gonna happen is that , uh , in parallel starting about now {vocalsound} we 're gonna get Fey {vocalsound} to , where you 're working with me and Robert , draft a note that we 're gonna send out to various CogSci c and other classes saying , " here 's an opportunity to be a subject . Contact Fey . " And then there 'll be a certain number of um , hours during the week which she will be available and we 'll bring in people . Uh , roughly how many , Robert ? We d Do we know ?
Turn 9, C (Grad): Um , fifty was our {disfmarker} sort of our first {disfmarker}
Turn 10, B (Professor): OK . So , we 're looking for a total of fifty people , not necessarily by any means all students but we 'll s we 'll start with {disfmarker} with that . In parallel with that , we 're gonna need to actually do the script . And , so , I guess there 's a plan to have a meeting Friday afternoon Uh , with {disfmarker} uh , Jane , and maybe Liz and whoever , on actually getting the script worked out . But what I 'd like to do , if it 's O K , {vocalsound} is to s to , as I say , start the recruiting in parallel and possibly start running subjects next week . The week after that 's Spring Break , and maybe we 'll look for them {disfmarker} some subjects next door
Turn 11, C (Grad): Yeah .
Turn 12, B (Professor): or {pause} i
Turn 13, C (Grad): Yeah . Also , Fey will not be here during spring break .
Turn 14, B (Professor): Oh , OK , then we won't do it .
Turn 15, C (Grad): So .
Turn 16, B (Professor): OK . So that 's easy . Um . So , is {disfmarker} Is that make sense to everybody ?
Turn 17, C (Grad): Yeah . Also , um , F {vocalsound} both Fey and I will , um , {vocalsound} do something of which I may , eh {disfmarker} kindly ask you to {disfmarker} to do the same thing , which is we gonna check out our social infrastructures for possible subjects . Meaning , {vocalsound} um , kid children 's gymnastic classes , pre - school parents and so forth . They also sometimes have flexible schedules . So , if you happen to be sort of in a non - student social setting , and you know people who may be interested in being subjects {disfmarker} We also considered using the Berkeley High School and their teachers , maybe , and get them interested in stuff .
Turn 18, B (Professor): That 's a good idea .
Turn 19, C (Grad): And , um . So that 's as far as our brainstorming was concerned .
Turn 20, B (Professor): Oh , yeah . The high school 's a great idea .
Turn 21, C (Grad): So . But I {disfmarker} I will just make a first draft of the , uh , note , the " write - up " note , send it to you and Fey and then {disfmarker}
Turn 22, B (Professor): And why don't you also copy Jane on it ?
Turn 23, C (Grad): And , um , Are we {disfmarker} Have we concurred that , uh , these {disfmarker} these forms are sufficient for us , and necessary ?
Turn 24, B (Professor): Uh , th I think they 're necessary . This {disfmarker} The permission form .
Turn 25, C (Grad): Mmm .
Turn 26, B (Professor): Uh , there has to be one ,
Turn 27, C (Grad): Nuh . N .
Turn 28, B (Professor): and I think we 're just gonna use it as it is , and {pause} Um
Turn 29, C (Grad): N . You happy with that ?
Turn 30, B (Professor): Well , yeah . There 's one tricky part about , um , they have the right um I The last paragraph {comment} " if you agree to participate you have the opportunity to have anything excised which you would prefer not to have included in the data set . " OK ? Now that , we had to be included for this other one which might have , uh , meetings , you know , about something .
Turn 31, C (Grad): Mm - hmm .
Turn 32, B (Professor): In this case , it doesn't really make sense . Um , so what I 'd like to do is also have our subjects sign a waiver saying " I don't want to see the final transcript " .
Turn 33, C (Grad): Mm - hmm .
Turn 34, B (Professor): And if they don't {disfmarker} If they say " no , I 'm not willing to sign that " , then we 'll show them the final transcript . But , um .
Turn 35, C (Grad): Yep . Makes sense .
Turn 36, B (Professor): That , uh {disfmarker} yeah , so we might actually , um S i Jane may say that , " you know , you can't do this " , uh , " on the same form , we need a separate form . " But anyway . I 'd {disfmarker} I 'd {disfmarker} I 'd like to , e e um , add an a little thi eh {disfmarker} a thing for them to initial , saying " nah , do I don't want to see the final transcript . "
Turn 37, C (Grad): Mm - hmm .
Turn 38, B (Professor): But other than that , that 's one 's been approved , this really is the same project , uh , rec you know . And so forth . So I think we just go with it .
Turn 39, C (Grad): Yeah . Yeah . OK . So much for the data , except that with Munich everything is fine now . They 're gonna {vocalsound} transcribe . They 're also gonna translate the , uh , German data from the TV and cinema stuff for Andreas . So . They 're {disfmarker} they all seem to be happy now , {vocalsound} with that . So . w c sh should we move on to the technical sides ?
Turn 40, B (Professor): Yep .
Turn 41, C (Grad): Well I guess the good {disfmarker} good news of last week was the parser . So , um Bhaskara and I started working on the {disfmarker} {vocalsound} the parser . Then Bhaskara went to class and once he came back , um , {vocalsound} it was finished . So . It , uh {disfmarker} I didn't measure it , but it was about an hour and ten minutes .
Turn 42, D (Grad): Yep .
Turn 43, C (Grad): And , um {disfmarker} and now it 's {disfmarker} We have a complete English parser that does everything the German parser does .
Turn 44, D (Grad): Something like that .
Turn 45, B (Professor): Which is {vocalsound} not a lot . But {disfmarker}
Turn 46, D (Grad): That 's the , uh , point .
Turn 47, C (Grad): The {disfmarker} uh , that 's not a lot .
Turn 48, B (Professor): OK .
Turn 49, D (Grad): Yes .
Turn 50, B (Professor): Right .
Turn 51, C (Grad): And um .
Turn 52, E (Grad): What did you end up having to do ? I mean , wha Was there anything {pause} interesting about it at all ?
Turn 53, C (Grad): Well , if you , eh {disfmarker}
Turn 54, D (Grad): We 'll show you .
Turn 55, B (Professor): Yeah , we can show us ,
Turn 56, E (Grad): or are we gonna see that ?
Turn 57, B (Professor): right ?
Turn 58, C (Grad): Well , w w We d The first we did is we {disfmarker} we tried to {disfmarker} to do {disfmarker} change the {disfmarker} the " laufen " into " run " , {vocalsound} or " running " , {vocalsound} or " runs " .
Turn 59, B (Professor): Yep .
Turn 60, C (Grad): And we noticed that whatever we tried to do , it no effect .
Turn 61, E (Grad): Mm - hmm .
Turn 62, C (Grad): And we were puzzled .
Turn 63, E (Grad): OK .
Turn 64, C (Grad): And , uh , the reason was that the parser i c completely ignores the verb .
Turn 65, E (Grad): Mm - hmm .
Turn 66, C (Grad): So this sentence {disfmarker} sentence is {disfmarker} parses the p the same output ,
Turn 67, E (Grad): Hmm . Interesting parser property .
Turn 68, C (Grad): um , even if you leave out , um , all {disfmarker} all of this .
Turn 69, E (Grad): I see . Yeah .
Turn 70, C (Grad): So it 's basically feature film and TV .
Turn 71, E (Grad): Today
Turn 72, C (Grad): That 's what you need .
Turn 73, E (Grad): OK .
Turn 74, C (Grad): If {disfmarker} if you 'd add {disfmarker} add Today and Evening , it 'll add Time or not .
Turn 75, E (Grad): And the {disfmarker} t and the time , right ?
Turn 76, C (Grad): So it {disfmarker} i it does look at that .
Turn 77, E (Grad): OK .
Turn 78, C (Grad): But all the rest is p simply frosting on the cake , and it 's optional for that parser .
Turn 79, E (Grad): True .
Turn 80, B (Professor): So , you can sho You {disfmarker} you {disfmarker} Are {disfmarker} are you gonna show us the little templates ?
Turn 81, C (Grad): And {disfmarker}
Turn 82, E (Grad): S
Turn 83, C (Grad): Yeah . We ar we can sh er {disfmarker} I can show you the templates . I {disfmarker} I also have it running here ,
Turn 84, E (Grad): The former end g " Oh , I see . Uh - huh .
Turn 85, C (Grad): so if I {vocalsound} do this now , um , {vocalsound} you can see that it parsed the wonderful English sentence , " Which films are on the cinema today {pause} evening ? " But , um .
Turn 86, B (Professor): Well , that sounds {disfmarker}
Turn 87, C (Grad): Uh do don't worry about it .
Turn 88, B (Professor): No i
Turn 89, C (Grad): It could be " this evening , which {disfmarker} which films are on the cinema " , or " running in the cinema , which {disfmarker} " uh , " today evening " , uh i " Is anything happening in the cinema this evening ? "
Turn 90, E (Grad): OK . OK . Key words , e basically .
Turn 91, B (Professor): Well
Turn 92, C (Grad): Ge - elaborate , or , more or less , {vocalsound} uh {disfmarker}
Turn 93, B (Professor): Actually , it 's a little tricky , in that there 's some allowable German orders which aren't allowable English orders and so forth . And it is order - based . So it {disfmarker} it {disfmarker} Isn't it ?
Turn 94, C (Grad): No .
Turn 95, D (Grad): No .
Turn 96, B (Professor): Oh . So it {disfmarker} it doe I it {disfmarker} These {disfmarker} u these optional elements ,
Turn 97, C (Grad): It is not {disfmarker}
Turn 98, B (Professor): it 's {disfmarker} it 's actually a set , not a sequence ?
Turn 99, C (Grad): Yeah . We were {disfmarker} I was afraid that , um {disfmarker}
Turn 100, B (Professor): Oh !
Turn 101, E (Grad): So it really is key word matching , basically .
Turn 102, B (Professor): Really a se
Turn 103, C (Grad): Um .
Turn 104, F (PhD): e yeah . Mm - hmm .
Turn 105, B (Professor): Oh , wow .
Turn 106, C (Grad): Um , I mean , these sentences are just silly .
Turn 107, E (Grad): Hmm .
Turn 108, C (Grad): I mean , uh , d these were not the ones we {disfmarker} we actually did it . Um . What 's an idiomatic of phrasing this ? Which films are {pause} showing ?
Turn 109, D (Grad): Are pl playing at the cinema ?
Turn 110, C (Grad): playing ?
Turn 111, D (Grad): Yeah .
Turn 112, E (Grad): Tonight ?
Turn 113, D (Grad): I changed that file , actually , where it 's on my account .
Turn 114, E (Grad): This {disfmarker} this evening ?
Turn 115, F (PhD): Actually , you would say , " which films are on tonight ? "
Turn 116, D (Grad): You want to get it ? Or {disfmarker} is {disfmarker} di was it easy to get it ?
Turn 117, C (Grad): Um . I have no net here .
Turn 118, D (Grad): Oh , OK .
Turn 119, B (Professor): Do I ?
Turn 120, C (Grad): OK . So . Wonderful parse , same thing . Um .
Turn 121, B (Professor): Right .
Turn 122, C (Grad): Except that we d w we don't have this , uh , time information here now , which is , um {disfmarker} Oh . This {disfmarker} are the reserve . Anyways . {vocalsound} So . Um . These are the {disfmarker} sort of the ten different sentence types that the uh {disfmarker} {vocalsound} the parser was able to do . And it still is , now in English .
Turn 123, B (Professor): Yeah .
Turn 124, E (Grad): Mm - hmm .
Turn 125, C (Grad): And , um {disfmarker} Sorry . And , um you have already to make it a little bit more elaborate , right ?
Turn 126, D (Grad): Yeah , I mean I changed those sentences to make it , uh , more , uh , idiomatic . And , of course , you can have i many variations in those sentences , they will still parse fine . So , in a sense it 's pretty broad .
Turn 127, B (Professor): OK .
Turn 128, C (Grad): OK . So , if you want to look at the templates , {vocalsound} {vocalsound} they 're conveniently located in a file , " template " . Um , and this is what I had to do . I had to change , @ @ {comment} " Spielfilm " to " film " , uh , " Film " to " movie " , cinem " Kino " to " cinema " {disfmarker} to " today " {disfmarker} heu " heute " to " today " ,
Turn 129, E (Grad): Huh .
Turn 130, C (Grad): evening {disfmarker} " Abend " to " evening "
Turn 131, B (Professor): Capitalized as well
Turn 132, A (Grad): Hmm .
Turn 133, C (Grad): And , um .
Turn 134, B (Professor): Y i
Turn 135, D (Grad): One thing I was wondering , was , those functions there , are those things that modify the M - three - L basically ?
Turn 136, C (Grad): Yep .
Turn 137, D (Grad): OK .
Turn 138, C (Grad): And that 's {disfmarker} that 's the next step ,
Turn 139, B (Professor): p
Turn 140, C (Grad): but we 'll get to that in a second .
Turn 141, B (Professor): Oh .
Turn 142, C (Grad): And so this means , um , " this " and " see " are not optional . " Want I like " is all maybe in there , but may also not be in there .
Turn 143, B (Professor): So {disfmarker} so , the point is , if it says " this " and " see " , it also will work in " see " and " this " ?
Turn 144, E (Grad): S
Turn 145, B (Professor): In the other order ?
Turn 146, C (Grad): Yeah .
Turn 147, B (Professor): with those two key words ?
Turn 148, C (Grad): Should we try it ?
Turn 149, B (Professor): " This is the one I want to see " or whatever .
Turn 150, C (Grad): OK . " Action watch " ,
Turn 151, D (Grad): Hmm .
Turn 152, C (Grad): whatever . Nothing was specialfi specified . except that it has some references to audio - visual media here .
Turn 153, D (Grad): AV medium .
Turn 154, C (Grad): Where it gets that from {disfmarker}
Turn 155, D (Grad): Yeah .
Turn 156, C (Grad): It 's correct , but I don't know where it gets it from .
Turn 157, D (Grad): " See " .
Turn 158, C (Grad): Oh , " see " . Yeah . Yeah . Yep . OK .
Turn 159, D (Grad): I mean it 's sort of {disfmarker}
Turn 160, C (Grad): And " see this " {comment} is exactly the same thing .
Turn 161, B (Professor): OK , so it is set - based . Alright .
Turn 162, D (Grad): One thing I was wondering was , {vocalsound} those percentage signs , right ? So , I mean , why do we even have them ?
Turn 163, C (Grad): Yep .
Turn 164, D (Grad): Because {disfmarker} if you didn't have them {disfmarker}
Turn 165, C (Grad): Uh , I 'll tell you why . Because it gives a {disfmarker} you a score .
Turn 166, E (Grad): Mm - hmm .
Turn 167, C (Grad): And the value of the score is , v I assume , I guess , the more of these optional things that are actually in there , the higher the r score {vocalsound} it is .
Turn 168, D (Grad): Oh . OK . So that 's the main purpose . Alright .
Turn 169, E (Grad): It 's a match .
Turn 170, F (PhD): Right .
Turn 171, E (Grad): Mm - hmm .
Turn 172, B (Professor): OK .
Turn 173, C (Grad): So we {disfmarker} we shouldn't belittle it too much . It 's doing something , some things , and it 's very flexible . I 've just tried to
Turn 174, E (Grad): Mm - hmm .
Turn 175, C (Grad): be nice .
Turn 176, F (PhD): Right .
Turn 177, B (Professor): No , no . Fine .
Turn 178, E (Grad): Right {disfmarker} Yeah .
Turn 179, B (Professor): Yeah , yeah , yeah , flexible it is .
Turn 180, F (PhD): But {disfmarker}
Turn 181, C (Grad): OK . {vocalsound} Um , let 's hope that the generation will not be more difficult , even though the generator is a little bit more complex . Uh but we 'll {disfmarker} Mmm , that means we may need two hours and twenty minutes rather than an hour ten minutes ,
Turn 182, B (Professor): Alright .
Turn 183, C (Grad): I hope .
Turn 184, D (Grad): Right .
Turn 185, C (Grad): And the next thing I would like to be able to do , and it seems like this would not be too difficult either , is {vocalsound} to say , " OK let 's now pretend we actually wanted to not only change the {disfmarker} {vocalsound} the mapping of {disfmarker} of , uh , words to the M - three - L but we also wanted to change {disfmarker} add a new sentence type and and make up some {disfmarker} some new M - three - L {disfmarker} s "
Turn 186, B (Professor): Yep . So That 'd be great . It would be a good exercise to just see {vocalsound} whether one can get that to run .
Turn 187, C (Grad): See th Mm - hmm . {vocalsound} Yep . And , um ,
Turn 188, D (Grad): So , that 's {disfmarker}
Turn 189, C (Grad): that 's {disfmarker} shouldn't be too tough .
Turn 190, D (Grad): Fine , yeah . Yeah , so where are those {disfmarker} those functions " Action " , " Goodbye " , and so on , right ? Are they actually , um , {vocalsound} Are they going to be called ? Um , are they present in the code for the parser ?
Turn 191, C (Grad): Yeah . I think what it does , it i i it does something sort of fancy . It loads um {disfmarker} It has these style sheets and also the , um , schemata . So what it probably does , is it takes the , uh , {vocalsound} um {disfmarker} Is this where it is ? This is already the XML stuff ? This is where it takes its own , um , syntax , and converts it somehow . Um . Where is the uh {disfmarker}
Turn 192, D (Grad): What are you looking for ?
Turn 193, C (Grad): Um , where it actually produces the {disfmarker} the XML out of the , uh , parsed {pause} stuff .
Turn 194, D (Grad): Oh , OK .
Turn 195, C (Grad): No , this is not it . Uh . I can't find it now . You mean , where the {disfmarker} where the act how the action " Goodbye " maps into something {disfmarker}
Turn 196, D (Grad): Yeah .
Turn 197, A (Grad): Yeah , where are those constructors defined ?
Turn 198, D (Grad): Oh .
Turn 199, C (Grad): Nope .
Turn 200, D (Grad): No , that 's not it .
Turn 201, C (Grad): Yeah . This is sort of what happens . This is what you would need to {disfmarker} to change {disfmarker} to get the , uh , XML changed . So when it encounts encounters " Day " , {vocalsound} it will , uh , activate those h classes in the {disfmarker} in the XML stuff But , um {disfmarker} I saw those actions {disfmarker} uh , the " Goodbye " stuff somewhere . Hmm , hmm , hmm , hmm , hmm .
Turn 202, A (Grad): Grep for it ?
Turn 203, C (Grad): Yeah . Let 's do that . Oh .
Turn 204, D (Grad): Mmm . M - three - L dot DTD ?
Turn 205, C (Grad): Yep .
Turn 206, D (Grad): That 's just a {pause} specification for the XML format .
Turn 207, C (Grad): Yep . Well , we 'll find that out . So whatever {disfmarker} n this does {disfmarker} I mean this is , basically , looks l to me like a function call , right ?
Turn 208, B (Professor): Hmm ? Oh , yeah .
Turn 209, C (Grad): And , um {disfmarker} So , whenever it {disfmarker} it encounters " Goodbye " , which we can make it do in a second , here
Turn 210, A (Grad): That function automatically generates an initialized XML structure ?
Turn 211, C (Grad): I
Turn 212, D (Grad): I think each of those functions act on the current XML structure , and change it in some way , for example , by adding a {disfmarker} a l a field to it , or something .
Turn 213, B (Professor): y Yeah . They also seem to affect state ,
Turn 214, C (Grad): Mm - hmm .
Turn 215, B (Professor): cause some of them {disfmarker} there were other actions uh , that {disfmarker} that s seemed to step {disfmarker} state variables somewhere ,
Turn 216, D (Grad): Right .
Turn 217, B (Professor): like the n s " Discourse Status Confirm " . OK . So that 's going to be a call on the discourse
Turn 218, C (Grad): Yep .
Turn 219, B (Professor): and {vocalsound} confirm that it 's {disfmarker}
Turn 220, C (Grad): W we Mm - hmm
Turn 221, D (Grad): Oh , you mean that 's not going to actually modify the tree ,
Turn 222, B (Professor): I think that 's right .
Turn 223, C (Grad): e
Turn 224, D (Grad): but it 's going to change the event .
Turn 225, B (Professor): I think it 's actually {disfmarker} That looks like it 's state modification .
Turn 226, D (Grad): Oh . Oh .
Turn 227, C (Grad): e mmm Um , well i There is a feature called " Discourse - Status " ,
Turn 228, D (Grad): When there 's a feature .
Turn 229, B (Professor): Yeah .
Turn 230, C (Grad): And so whenever I just say , " Write " , it will {disfmarker} it will put this in here .
Turn 231, B (Professor): Oh , so it always just {disfmarker} Is it {disfmarker} So it {disfmarker} Well , go back , then , cuz it may be that all those th things , while they look like function calls , are just a way of adding exactly that to the XML .
Turn 232, C (Grad): h Yep .
Turn 233, B (Professor): Uh - huh ! I 'm not {disfmarker} I 'm not sure .
Turn 234, C (Grad): So , this {disfmarker}
Turn 235, B (Professor): e I 'm not sure {disfmarker} e that {disfmarker}
Turn 236, C (Grad): Um {disfmarker} well , we {disfmarker} we 'll see , when we say , let 's test something , " Goodbye " , causes it to c to create basically an " Action Goodbye - End - Action " .
Turn 237, B (Professor): Right .
Turn 238, C (Grad): Which is a means of telling the system to shut down .
Turn 239, B (Professor): Right .
Turn 240, C (Grad): Now , if we know that " Write " produces a " Feature Discourse - Status Confirm Discourse - Status " . So if I now say " Write , Goodbye , " it should do that . It sho it creates this ,
Turn 241, D (Grad): Mm - hmm .
Turn 242, B (Professor): Right .
Turn 243, C (Grad): " Confirm Goodbye " .
Turn 244, B (Professor): Yep .
Turn 245, D (Grad): Right there . But there is some kind of function call , because how does it know to put Goodbye in Content , but , uh , Confirm in Features ?
Turn 246, C (Grad): Oh . It d it {disfmarker} n That 's because {disfmarker}
Turn 247, D (Grad): So So , it 's not just that it 's adding that field .
Turn 248, B (Professor): Right .
Turn 249, D (Grad): It 's
Turn 250, B (Professor): Absolutely . Good point .
Turn 251, D (Grad): OK .
Turn 252, B (Professor): It 's {disfmarker} it 's {disfmarker} the {disfmarker} It 's under what sub - type you 're doing it . Yeah .
Turn 253, C (Grad): Mm - hmm . Yeah .
Turn 254, A (Grad): It 's mystery functions .
Turn 255, C (Grad): Well , sometimes it m Sometimes , i
Turn 256, D (Grad): Well , they 're defined somewhere , presumably .
Turn 257, B (Professor): Yeah , each is {disfmarker} S so that 's funny .
Turn 258, C (Grad): When it {disfmarker}
Turn 259, B (Professor): You bury the s the state in the function Alright .
Turn 260, C (Grad): it {disfmarker}
Turn 261, A (Grad): Well , it just automatically initializes things that are common , right ?
Turn 262, B (Professor): Uh
Turn 263, A (Grad): So it 's just a shorthand .
Turn 264, B (Professor): Yeah .
Turn 265, C (Grad): For example {disfmarker} Oh , this is German . Sorry . e So , now , this , it cannot do anymore . Nothing comes out of here .
Turn 266, A (Grad): A " not a number " is a value . Awesome .
Turn 267, C (Grad): So , it doesn't speak German anymore , but it does speak English . And there is , here , a reference {disfmarker} So , this tells us that whatever is {disfmarker} has the ID " zero " is referenced here {disfmarker} by @ @ {comment} the restriction seed and this is exa " I want {disfmarker} " What was the sentence ?
Turn 268, B (Professor): " I want two seats here . "
Turn 269, C (Grad): " need two seats here . " Nuh . " And where is it playing ? " There should also be a reference to something , maybe . Our d This is re um Mmm . Here , we change {disfmarker} and so , we {disfmarker} Here we add something to the Discourse - Status , that the user wants to change something that was sort of done before And , uh {disfmarker} and that , whatever is being changed has something to do with the cinema .
Turn 270, A (Grad): So then , whatever takes this M - three - L is what actually changes the state , not the {disfmarker} Yeah , OK .
Turn 271, B (Professor): No , right , the Discourse Maintainer ,
Turn 272, A (Grad): Yeah .
Turn 273, B (Professor): yeah . I see . And it {disfmarker} and it runs around looking for Discourse Status tags , and doing whatever it does with them . And other people ignore those tags . Alright . So , yeah . I definitely think it 's {disfmarker} {vocalsound} It 's worth the exercise of trying to actually add something that isn't there .
Turn 274, C (Grad): Hmm ?
Turn 275, B (Professor): Uh Disc
Turn 276, C (Grad): Sort of get a complete understanding of the whole thing .
Turn 277, B (Professor): Yeah , a kid understanding what 's going on . Then the next thing we talked about is actually , {vocalsound} um , figuring out how to add our own tags , and stuff like that .
Turn 278, C (Grad): OK . Point number two . I got the , uh , M - three - L for the routes today . Uh , so I got some more . This is sort of the uh , {vocalsound} um , Hmm . Interesting . It 's just going up , it 's not going back down . So , this is {disfmarker} um , what I got today is {vocalsound} the {disfmarker} the new {vocalsound} um {vocalsound} M - three - L for um , {vocalsound} {vocalsound} the Maps ,
Turn 279, B (Professor): Yep .
Turn 280, C (Grad): uh , and with some examples {disfmarker} So , this is the XML and this is sort of what it will look like later on , even though it {disfmarker} you can't see it on {disfmarker} on this resolution . And this is what it {disfmarker} sort of is the {disfmarker} the structure of Map requests , um also not very interesting , and here is the more interesting stuff for us , is the routes , route elements , and , again , as we thought it 's really simple . This is sort of the , uh , {vocalsound} {vocalsound} um , {vocalsound} parameters . We have @ @ {comment} simple " from objects " and " to objects " and so forth , points of interest along the way {disfmarker} And , um , I asked them whether or not we could , um {disfmarker} First of all , I was little bit {disfmarker} It seemed to me that this m way of doing it is sort of a stack a step backwards from the way we 've done it before . t It seems to me that some notions were missing .
Turn 281, B (Professor): S
Turn 282, C (Grad): So these are {disfmarker} these are {disfmarker}
Turn 283, B (Professor): So these are {disfmarker} these are your friends back at EML .
Turn 284, C (Grad): Yep . Who are doing this .
Turn 285, B (Professor): So this is not a complicated negotiation . There 's {disfmarker} there 's not seven committees , or anything , right ?
Turn 286, C (Grad): No . No , this is very straightforward .
Turn 287, B (Professor): Great . So this is just trying to {disfmarker} It 's a design thing , not a political thing . Once we 've {disfmarker} eh {disfmarker} We can just sort of agree on what oughta be done .
Turn 288, C (Grad): Yeah .
Turn 289, B (Professor): Good .
Turn 290, C (Grad): Exactly . And , um {disfmarker} And , uh {disfmarker} However , the , uh {disfmarker} e So that you understand , it is really simple . Uh {disfmarker} You {disfmarker} you have a route , and you cut it up in different pieces . And every {disfmarker} every element of that e r r f of that {disfmarker} Every segment we call a " route element " . And so , from A to B we cut up in three different steps , and every step has a " from object " where you start , a " to object " where y where {pause} you sort of end , and some points of interest along the way . What w I was sort of missing here , and uh , maybe it was just me being too stupid , is , {vocalsound} I didn't sort of get the {disfmarker} the notion of the global goal of the whole route . Really , s was not straightforward visibly for me . And some other stuff . And I {vocalsound} suggested that they should n be {disfmarker} k uh , kind enough to do s two things for us , is one , um , {vocalsound} {vocalsound} Also allocating , uh , some tags for our Action Schema Enter - Vista - Approach , and {disfmarker} And also , um , since you had suggested that {disfmarker} that , um , we figure out if we ever , for a demo reason , wanted to shortcut directly to the g GIS and the Planner , of how we can do it . Now , what 's the state of the art of getting to entrances , um , what 's the syntax for that , how get getting to {vocalsound} vista points and calculating those on the spot . And the Approach mode , anyhow , is the default . That 's all they do it these days . Wherever you 'll find a route planner it n does nothing but get to the closest point where the street network is {vocalsound} at minimal distance to the geometric center .
Turn 291, B (Professor): Mm - hmm .
Turn 292, C (Grad):  So .
Turn 293, B (Professor): So , well , let {disfmarker} Now , this is important . Let , uh {disfmarker} I want a a Again , outside of m almost managerial point , um {disfmarker} You 're in the midst of this , so you know better . But it seems to me it 's probably a good idea to li uh {disfmarker} minimize the number of uh , change requests we make of them . So it seemed to me , what we ought to do is get our story together . OK ? And think about it some , internally , before asking them to make changes .
Turn 294, C (Grad): Mm - hmm .
Turn 295, B (Professor): Oh . Does this {disfmarker} does this make sense to you guys ? It {disfmarker} I mean you 're {disfmarker} you 're doing the {disfmarker} the interaction but it seemed to me that {vocalsound} what we ought to do is come up with a {disfmarker} uh , something where you , um {disfmarker} And I {disfmarker} I don't know who 's mok working most closely on it . Probably Johno . OK . Uh , take what they have , send it to everybody saying " this is what they have , this is what we think we should add " , OK ? and then have a d a {disfmarker} an iteration within our group saying " Hmm , well {disfmarker} " OK ? And get our best idea of what we should add .
Turn 296, C (Grad): Mm - hmm .
Turn 297, B (Professor): And then go back to them . Is i or , I don't know does this make sense to you ? Or
Turn 298, C (Grad): Yeah . {vocalsound} Especially if we want {disfmarker} Sort of , what I {disfmarker} my feeling was eh we {disfmarker} we sort of reserved something that has a r eh an OK label . That 's {disfmarker} th that was my th first sort of step .
Turn 299, B (Professor): Mm - hmm .
Turn 300, C (Grad): I w No matter how we want to call it , {vocalsound} this is sort of our playground .
Turn 301, B (Professor): Right .
Turn 302, C (Grad): And if we get something in there that is a structure elaborate and {disfmarker} and {disfmarker} and {disfmarker} and {disfmarker} and complex enough to {disfmarker} to {disfmarker} to maybe enable a whole simulation , one of these days , that would be {disfmarker} u the {disfmarker} the perfect goal .
Turn 303, B (Professor): Right . That 's right . So . So , Yeah . The problem isn't the short ra range optimization . It 's the sort of {disfmarker} o one or two year kind of thing . OK . What are the thl class of things we think we might try to do in a year or two ? How {disfmarker} how would we try to characterize those and what do we want to request now {vocalsound} that 's leave enough space to do all that stuff ?
Turn 304, C (Grad): Mm - hmm .
Turn 305, B (Professor): Right .
Turn 306, C (Grad): Yep .
Turn 307, B (Professor): And that re that requires some thought .
Turn 308, C (Grad): Yep .
Turn 309, B (Professor): And {disfmarker} so that sounds like a great thing to do {vocalsound} as the priority item um , as soon as we can do it .
Turn 310, C (Grad): Yep .
Turn 311, B (Professor): So y so you guys will {vocalsound} send to the rest of us um {pause} {vocalsound} a version of um , this , and {disfmarker} the {disfmarker} uh , description {disfmarker}
Turn 312, A (Grad): With sugge yeah , suggested improvements and {disfmarker}
Turn 313, B (Professor): Well b Yeah . So , the {disfmarker} the {disfmarker} uh {disfmarker} Not everyone uh , reads German , so if you 'd um
Turn 314, A (Grad): Mmm .
Turn 315, B (Professor): tu uh , tur change the description to , uh , English
Turn 316, A (Grad): OK .
Turn 317, B (Professor): and , um , Then {disfmarker} then , yeah . Then , with some sug s suggestions about where {disfmarker} where do we go from here ?
Turn 318, A (Grad): OK .
Turn 319, B (Professor): Uh , this {disfmarker} and this , of course , was just the {vocalsound} {vocalsound} action end . Uh , at some point we 're going to have to worry about the language end . But for the moment just {vocalsound} uh , t for this class of {disfmarker} of things , we might want to try to encompass . And {disfmarker}
Turn 320, A (Grad): Then the scope of this is beyond {pause} Approach and Vis - or Vista . Yeah , yeah .
Turn 321, B (Professor): Oh , yeah , yeah yeah yeah . This is {disfmarker} this is everything that {disfmarker} that , um , {pause} {vocalsound} you know , um {pause} we might want to do in the next couple years .
Turn 322, A (Grad): Yeah , yeah . So what would {disfmarker}
Turn 323, C (Grad): Hmm ?
Turn 324, A (Grad): OK .
Turn 325, B (Professor): We don't {disfmarker} I mean , that 's an issue . We don't know what , entirely .
Turn 326, A (Grad): Uh , yeah . but I 'm just {disfmarker} But the {disfmarker} Yeah , OK . So I just {disfmarker} this XML stuff here just has to do with Source - Path - Goal type stuff , in terms of traveling through Heidelberg .
Turn 327, C (Grad): Hmm .
Turn 328, A (Grad): Or travel , specifically .
Turn 329, B (Professor): Right .
Turn 330, A (Grad): So , but this O Is the domain greater than that ?
Turn 331, B (Professor): No .
Turn 332, A (Grad): OK .
Turn 333, B (Professor): I think {disfmarker} I think the i the idea is {pause} that {disfmarker} Oh . It 's beyond Source - Path - Goal , but I think we don't need to get beyond it @ @ {comment} {disfmarker} tourists in Heidelberg .
Turn 334, A (Grad): OK .
Turn 335, B (Professor): It seems to me we can get {vocalsound} all the complexity we want in actions and in language without going outside of tourists in Heidelberg . OK ? But you know , i depending on what people are interested in , one could have , {vocalsound} uh , tours , one could have {vocalsound} um , explanations of why something is {disfmarker} is , you know , why {disfmarker} why was this done , or {disfmarker} I mean , no {disfmarker} there 's no end to the complexity you can build into the {disfmarker} {vocalsound} uh , what a tourist in Heidelberg might ask .
Turn 336, A (Grad): Mmm .
Turn 337, B (Professor): So , at least {disfmarker} unless somebody else wants t to suggest otherwise I think {vocalsound} the general domain we don't have t to uh , broaden . That is , tourists in Heidelberg . And if there 's something somebody comes up with that can't be done that way , then , sure . W we 'll {disfmarker} we 'll look at that , but {vocalsound} uh I 'd be s I I 'd be surprised at {disfmarker} if there 's any {disfmarker} {vocalsound} important issue that {disfmarker} that {disfmarker} And , um {disfmarker} I mean if {disfmarker} if you want to {pause} uh , push us into reference problems , that would be great .
Turn 338, F (PhD): OK .
Turn 339, B (Professor): OK , so this is {disfmarker} his specialty is {disfmarker} reference ,
Turn 340, C (Grad): Mm - hmm .
Turn 341, B (Professor): and {disfmarker} you know , what {disfmarker} what are these things referring to ? Not only {vocalsound} anaphora , but , uh , more generally the , uh {disfmarker} this whole issue of , uh , referring expressions , and , what is it that they 're actually dealing with in the world ?
Turn 342, C (Grad): Mm - hmm .
Turn 343, B (Professor): And , again , this is li in the databa this is also pretty well formed because there is an ontology , and the database , and stuff . So it isn't like , {vocalsound} um , you know , the Evening Star or stuff like that .
Turn 344, F (PhD): Right .
Turn 345, B (Professor): I i it {disfmarker} All the entities do have concrete reference . Although th the {vocalsound} To get at them from a language may not be trivial .
Turn 346, F (PhD): Right .
Turn 347, B (Professor): There aren't really deep mysteries about um , what w what things the system knows about .
Turn 348, F (PhD): Right . Right . And you have both proper names and descriptions
Turn 349, B (Professor): All those things .
Turn 350, F (PhD): and y and you can ask for it .
Turn 351, B (Professor): Yeah . You have proper names , and descriptions .
Turn 352, C (Grad): Mm - hmm .
Turn 353, F (PhD): Right .
Turn 354, B (Professor): And a l and a lot {disfmarker} and {disfmarker} and anaphora , and pronouns ,
Turn 355, C (Grad): Nuh .
Turn 356, F (PhD): OK . Right .
Turn 357, B (Professor): and {pause} all those things .
Turn 358, F (PhD): Right .
Turn 359, C (Grad): Now , we hav the {disfmarker} the whole {disfmarker} Unfortunately , the whole database is , uh , {vocalsound} in German . We have just commissioned someone to translate some bits of it , IE the e the shortest k the {disfmarker} the more general descriptions of all the objects and , um , persons and events . So , it 's a relational database with persons , events , {vocalsound} and , um , objects . And it 's {disfmarker} it 's quite , um , {vocalsound} there . But did y I {disfmarker} uh {disfmarker} I think there will be great because the reference problem really is not trivial , even if you have such a g well - defined world .
Turn 360, B (Professor): He knows .
Turn 361, C (Grad): Ah - he you are not , uh , throwing uh , uh , carrying owls to Athens .
Turn 362, A (Grad): Could you give me an example of a reference problem ? so {disfmarker} so l I can make it more concrete ?
Turn 363, C (Grad): Well {disfmarker} {vocalsound} How do I get to the Powder - Tower ? We sort of t think that our bit in this problem is interesting , but , just to get from Powder - Tower to an object I ID in a database is also not really trivial .
Turn 364, F (PhD): Or {disfmarker} or if you take something even more scary , um , " how do I get to the third building after the Tower ? the Ple - Powder - Tower ? "
Turn 365, A (Grad): Mmm .
Turn 366, F (PhD): Uh , you need some mechanism for
Turn 367, B (Professor): Yeah . Or , you know , the church across from City Hall , or {disfmarker}
Turn 368, A (Grad): Or the re the restaurant where they wear lederhosen ?
Turn 369, C (Grad): Or the
Turn 370, F (PhD): Right .
Turn 371, A (Grad): Or is that {disfmarker}
Turn 372, B (Professor): Yeah , that would be fine .
Turn 373, A (Grad): OK .
Turn 374, F (PhD): Right .
Turn 375, B (Professor): Yeah .
Turn 376, C (Grad): O or {disfmarker} or tower , or this tower , or that building , or {disfmarker}
Turn 377, F (PhD): Right .
Turn 378, E (Grad): Uniquely .
Turn 379, C (Grad): hmm ?
Turn 380, A (Grad): OK . Trying to {disfmarker}
Turn 381, B (Professor): Or you can say " how {disfmarker} " you know , " how do I get back ? "
Turn 382, A (Grad): Yeah , yeah .
Turn 383, B (Professor): OK . And , again , it 's just a question of which of these things , uh , people want to {vocalsound} dive into . What , uh , I think I 'm gonna try to do , and I guess , pwww ! let 's say that by the end of spring break , I 'll try to come up with some {vocalsound} general story about , um , construction grammar , and what constructions we 'd use and how all this might fit together . There 's this whole framework problem that I 'm feeling really uncomfortable about . And I haven't had a chance to {vocalsound} think about it seriously . But I {disfmarker} I want to {disfmarker} I want to do that early , rather than late . And you and I will probably have to talk about this some .
Turn 384, C (Grad): u u u u That 's what strikes me , that we sort of {disfmarker} the de g uh , small {disfmarker} Something , uh , maybe we should address one of these days , is to {disfmarker} {vocalsound} That most of the work people actually always do is look at some statements , and {disfmarker} and analyze those . Whether it 's abstracts or newspapers and stuff like this .
Turn 385, B (Professor): Hmm .
Turn 386, C (Grad): But the whole {disfmarker} i is it {disfmarker} is it really relevant that we are dealing mostly with , sort of , questions ?
Turn 387, B (Professor): Oh , yeah ?
Turn 388, C (Grad): Uh , you know {disfmarker}
Turn 389, B (Professor): Well , I mean yeah , I d
Turn 390, C (Grad): And this is {disfmarker} It seems to me that we should maybe at least spend a session or {disfmarker} or brainstorm a little bit about whether that l this is special case in that sense .
Turn 391, D (Grad): Mm - hmm .
Turn 392, C (Grad): Um , I don't know . You know {disfmarker} Did we ever find m metaphorical use in {disfmarker} in questions in {disfmarker} in that sense , really ?
Turn 393, B (Professor): Yeah .
Turn 394, D (Grad): 
Turn 395, B (Professor): You will .
Turn 396, C (Grad): And how soon ,
Turn 397, B (Professor): Oh , yeah .
Turn 398, C (Grad): I don't know .
Turn 399, B (Professor): I mean , uh , we could take all the standard metaphor examples and make question versions of them . OK .
Turn 400, C (Grad): " Who got kicked out of France ? "
Turn 401, F (PhD): Muh
Turn 402, B (Professor): Yeah , or , you know . " Wh - why is he {disfmarker} why is he pushing for promotion ? "
Turn 403, C (Grad): Nuh .
Turn 404, F (PhD): Right .
Turn 405, B (Professor): or , " who 's pushing proof "
Turn 406, C (Grad): Nuh .
Turn 407, B (Professor): er , just pick {disfmarker} pick any of them and just {vocalsound} do the {disfmarker} eh {disfmarker}
Turn 408, C (Grad): Mm - hmm .
Turn 409, B (Professor): So I don't {disfmarker} I don't think , {vocalsound} uh , it 's at all difficult {disfmarker} Uh , to convert them to question forms that really exist and people say all the time , um {disfmarker} And {disfmarker} sort of {disfmarker} we don't know how to handle them , too . Right ? I mean , it 's {disfmarker} I d It {disfmarker} We don't know how to handle the declarative forms , @ @ {comment} really , and , then , the interrogative forms , ah - oh . Uh . Yeah .
Turn 410, D (Grad): Ooo !
Turn 411, B (Professor): Nancy , it looked like you were s
Turn 412, E (Grad): Oh . it 's just that {disfmarker} that the goals are g very different to cases {disfmarker} So we had this problem last year when we first thought about this domain , actually , was that {vocalsound} most of the things we talked about are our story understanding .
Turn 413, B (Professor): Right .
Turn 414, E (Grad): Uh , we 're gonna have a short discourse and {vocalsound} the person talking is trying to , I don't know , give you a statement and tell you something . And here , {vocalsound} it 's th
Turn 415, C (Grad): Help you create a mental model , blah - blah - blah . Yeah .
Turn 416, E (Grad): Yea - eh {disfmarker} y Yeah , I guess so .
Turn 417, B (Professor): Yes .
Turn 418, E (Grad): And then here , y you are j uh , the person is getting information and they or may not be following some larger plan , {vocalsound} you know , that we have to recognize or , you know , infer . And th th the {disfmarker} their discourse patterns probably {nonvocalsound} don't follo follow quite as many {vocalsound} logical connec
Turn 419, B (Professor): Right . No , I think that 's one of things that 's interesting , is {disfmarker} is in this sort of over - arching story we {disfmarker} we worked it out for th as you say , this {disfmarker} the storytelling scenario .
Turn 420, E (Grad): Yeah . Mm - hmm .
Turn 421, B (Professor): And I think it 's really worth thinking through {vocalsound} {vocalsound} what it looks like .
Turn 422, E (Grad): Mm - hmm .
Turn 423, B (Professor): What is the simspec mean , et cetera .
Turn 424, E (Grad): Mm - hmm . M Right . Cuz for a while we were thinking , " well , how can we change the , {vocalsound} um , data to sort of illicit tha {vocalsound} illicit , um , actions that are more like what we are used to ? " But obviously we would rather , you know , try to figure out what 's {disfmarker} what 's , you know {disfmarker}
Turn 425, B (Professor): Well , I don't know . I mean , maybe {disfmarker} maybe that 's what we 'll do is {disfmarker} is s u e We can do anything we want with it . I mean , once we have fulfilled these requirements ,
Turn 426, E (Grad): Yep . Mmm {disfmarker} Mm - hmm . Mm - hmm .
Turn 427, B (Professor): OK , and the one for next uh , summer is just half done and then the other half is this , um , " generation thing " which we think isn't much different .
Turn 428, E (Grad): Mm - hmm .
Turn 429, B (Professor): So once that 's done , then all the rest of it is , uh , sort of , you know , what we want to do for the research . And we can {disfmarker} w we can do all sorts of things that don't fit into their framework at all . Th - there 's no reason why we 're c we 're constrained to do that .
Turn 430, E (Grad): Mm - hmm .
Turn 431, B (Professor): If we can use all the , uh , execution engines , then we can , {vocalsound} you know , really {nonvocalsound} try things that would be too {disfmarker} too much pain to do ourselves .
Turn 432, E (Grad): Mm - hmm .
Turn 433, B (Professor): But there 's no obligation on any of this . So , if we want to turn it into u understan standing stories about Heidelberg , we can do that . I mean , that would just be a t a um {disfmarker}
Turn 434, C (Grad): Or , as a matter of fact , we need {disfmarker} {vocalsound} and if we if we ' r eh {disfmarker} take a ten year perspective , we need to do that , because w e w a Assuming we have this , um , we we ta in that case we actually do have these wonderful stories , and historical anecdotes ,
Turn 435, B (Professor): Yeah .
Turn 436, C (Grad): and knights jumping out of windows ,
Turn 437, E (Grad): Mmm .
Turn 438, C (Grad): and - and - and {disfmarker} {comment} {comment} tons of stuff . So , th the database is huge , and if we want to answer a question on that , we actually have to go one step before that , and understand that . In order to e do sensible information extraction .
Turn 439, E (Grad): Mm - hmm . Yeah . Mm - hmm .
Turn 440, B (Professor): You might , yeah .
Turn 441, C (Grad): And so , um , this has been a {disfmarker} a {disfmarker} a Deep Map research issue that was {disfmarker} is {disfmarker} is part of the unresolved , and to - do 's , and something for the future , is {vocalsound} how can we sort of run our our text , our content , through a machine {vocalsound} that will enable us , later , to retrieve or answer e questions more sensibly ?
Turn 442, F (PhD): Mwa Mm - hmm .
Turn 443, E (Grad): Mm - hmm . Mmm .
Turn 444, B (Professor): Right . Anyway . S Who 's going ?
Turn 445, F (PhD): So , uh {disfmarker} So , uh , I was just going to ask , um , {vocalsound} so , what is the {disfmarker} the basic thing that {disfmarker} that you are , um , obligated to do , um , uh , by the summer before w uh y c we can move {disfmarker}
Turn 446, B (Professor): Ah ! OK . So {disfmarker} eh {disfmarker} Yeah . So , what happened is , there 's this , eh , uh {disfmarker} Robert was describing the {disfmarker} There 's two packages there 's a , uh , quote parser , there 's a particular piece {vocalsound} of this big system , which , in German , uh , takes these t sentence templates and produces XML structures . And one of our jobs was to make the English equivalent of that .
Turn 447, F (PhD): Right .
Turn 448, B (Professor): That , these guys did in a {disfmarker} in a day .
Turn 449, F (PhD): Right . Right .
Turn 450, B (Professor): The other thing is , at the other end , roughly at the same level , there 's something that takes , uh , X M L structures , produces an output XML structure which is instructions for the generator .
Turn 451, F (PhD): Right .
Turn 452, B (Professor): OK ? And then there 's a language generator , and then after that a s a synthesizer that goes from an XML structure to , uh , language generation , to actual specifications for a synthesizer . Eh , but again , there 's one module in which there 's one piece {vocalsound} that we have to convert to English .
Turn 453, F (PhD): Right . Right . Got it .
Turn 454, B (Professor): Is that {disfmarker} OK . And that {disfmarker} But as I say , this is {disfmarker} all along was viewed as a kind of {disfmarker} {vocalsound} a m a minor thing , necessary , but {disfmarker} but not {disfmarker}
Turn 455, F (PhD): Right .
Turn 456, B (Professor): OK ?
Turn 457, F (PhD): Right .
Turn 458, B (Professor): And much more interesting is the fact that , {vocalsound} as part of doing this , we {disfmarker} we are , you know , inheriting this system that does all sort of these other {vocalsound} things .
Turn 459, F (PhD): That 's great ! Right .
Turn 460, B (Professor): Not precisely what we want , and that 's {disfmarker} {vocalsound} that 's wh where it {disfmarker} it gets difficult . And I {disfmarker} I don't pretend to understand yet what I think we really ought to do .
Turn 461, C (Grad): OK . So , e enough of that , but I , uh , um , mmm , the e sort of , Johno and I will take up that responsibility , and , um , get a first draft of that . Now , we have um just , I think two more short things .
Turn 462, B (Professor): OK .
Turn 463, C (Grad): Um , y you guys sort of started fighting , uh , on the Bayes - net " Noisy - OR " front ?
Turn 464, D (Grad): Hmm . Yeah , I thought I should , um , talk a little bit about that , because that might be a good , uh , sort of architecture to have , in general for , uh , problems with , {vocalsound} you know , multiple inputs to a node .
Turn 465, B (Professor): Good ! OK . Good . And what 's the other one ? so that {disfmarker} just we know what the d agenda is ?
Turn 466, C (Grad): Um , the Wu paper , I think maybe {disfmarker}
Turn 467, B (Professor): Oh , yeah . I 've got a couple new Wu papers as well . Uh , so I {disfmarker} I 've been in contact with Wu , so , probably let 's put that off till I {disfmarker} I {disfmarker} till I understand better , {vocalsound} uh , what he 's doing . It 's just a little embarrassing cause all this was in his thesis and I was on his thesis committee , and , so , {vocalsound} I r really knew this at one time .
Turn 468, F (PhD): Ugh .
Turn 469, B (Professor): But , I {disfmarker} I {disfmarker} It 's not only uh Is {disfmarker} Part of what I haven't figured out yet is {disfmarker} is how all this goes together . So I 'll dig up some more stuff from Dekai . And {disfmarker} so why don't we just do the , uh {disfmarker}
Turn 470, D (Grad): OK . So {disfmarker} should I {disfmarker} Is there a white board here that I can use ?
Turn 471, B (Professor): Yeah . You could {disfmarker}
Turn 472, D (Grad): Uh {disfmarker}
Turn 473, E (Grad): Yeah .
Turn 474, B (Professor): squealing sound ?
Turn 475, D (Grad): Or shall I just use this ?
Turn 476, B (Professor): It 's probably just as easy . I
Turn 477, F (PhD): Yeah .
Turn 478, D (Grad): Yeah .
Turn 479, A (Grad): You can put the microphone in your pocket .
Turn 480, D (Grad): Hey !
Turn 481, A (Grad): I was envying you and your pocket cause I don't have one .
Turn 482, E (Grad): It was a quick one , huh ?
Turn 483, B (Professor): That 's why they invented " pocket T 's " .
Turn 484, A (Grad): exactly
Turn 485, E (Grad): They have clips !
Turn 486, D (Grad): Yeah .
Turn 487, E (Grad): Huh .
Turn 488, D (Grad): So , um {disfmarker} {vocalsound} Recall that , uh , we want to have this kind of structure in our Bayes - nets . Namely , that , um {disfmarker} {vocalsound} {vocalsound} You have these nodes that have several bands , right ? So {disfmarker} Does I mean , they sort of {disfmarker} the typical example is that , um , these are all a bunch of cues for something , and this is a certain effect that we 'd like to conclude . So , uh {disfmarker} Like , let 's just look at the case when , um , this is actually the {disfmarker} the final action , right ? So this is like , uh , {vocalsound} you know , touch ,
Turn 489, C (Grad): Y
Turn 490, D (Grad): or {disfmarker}
Turn 491, C (Grad): E - EVA
Turn 492, D (Grad): Sorry . Uh
Turn 493, C (Grad): 
Turn 494, D (Grad): Yeah , E - {vocalsound} EVA , right ?
Turn 495, C (Grad): Yeah .
Turn 496, D (Grad): Enter , V View , Approach , right ?
Turn 497, F (PhD): W what was this ? It {disfmarker} i i i ehhh , {comment} i ehhh .
Turn 498, B (Professor): Wri - write it out for for {disfmarker}
Turn 499, D (Grad): So , this is {disfmarker} Yeah . Enter ,
Turn 500, F (PhD): I mean {disfmarker}
Turn 501, D (Grad): View , Approach .
Turn 502, F (PhD): OK . Right .
Turn 503, D (Grad): Right . So , I mean , we 'd like to {disfmarker} take all these various cues , right ?
Turn 504, F (PhD): Like the army .
Turn 505, D (Grad): So this one might be , say , uh {disfmarker}
Turn 506, E (Grad): New terminology ?
Turn 507, F (PhD): Yeah .
Turn 508, C (Grad): Hmm ?
Turn 509, D (Grad): Well , let me pick a random one
Turn 510, E (Grad): I haven't heard that before .
Turn 511, D (Grad): and say , uh {disfmarker} I don't know , it could be , like {disfmarker} {vocalsound} This isn't the way it really is , but let me say {disfmarker} that , suppose someone mentioned , uh , admission fees Ah , it takes too long . Try {disfmarker} let me just say " Landmark " . If the thing is a landmark , you know , {vocalsound} um {disfmarker} then there 's another thing that says if {disfmarker} {vocalsound} um {disfmarker} if it 's closed or not , at the moment . Alright , so you have nodes . Right ? And the , uh , problem that we were having was that , you know , given N - nodes , there 's " two to the N " Given N - nodes , and furthermore , the fact that there 's three things here , we need to specify " three times " , uh , " two to the N " probabilities . Right ? That 's assuming these are all binary , which f they may not be . For example , they could be " time of day " , in which case we could , uh , say , you know , " Morning , afternoon , evening , night " . So , this could be more So , it 's a lot , anyway . And , that 's a lot of probabilities to put here , which is kind of a pain . So {pause} Noisy - ORs are a way to , uh , {vocalsound} sort of deal with this . Um Where should I put this ? So , the idea is that , um , {vocalsound} Let 's call these , uh , C - one , C - two , C - three , and C - four , and E , for Cause and Effect , I guess . The idea is to have these intermediate nodes . Right . Well , actually , the idea , first of all , is that each of these things has a {disfmarker} quote - unquote distinguished state , which means that this is {vocalsound} the state in which we don't really know anything about it . So {disfmarker} right ? So , for example , if we don't really know {vocalsound} if the thing is a landmark or not , Or , i if that just doesn't seem relevant , then that would be th sort of the Disting - the Distinguish state . It 's a really , you know , {vocalsound} if there is something for the person talking about the admission fee , you know , if they didn't talk about it , that would be the Distinguish state .
Turn 512, C (Grad): S so , this is a fanciful way of saying " default " ?
Turn 513, D (Grad): So {disfmarker} Yeah , yeah .
Turn 514, C (Grad): OK .
Turn 515, D (Grad): That 's just what they {disfmarker} the word they used in that paper .
Turn 516, C (Grad): Mm - hmm .
Turn 517, D (Grad): So , the idea is that , um , {vocalsound} you have these intermediate nodes , right ? E - one , E - two , E - three and E - four ?
Turn 518, B (Professor): So , this is the Heckerman paper you 're working with ? Good .
Turn 519, D (Grad): Yeah . So {pause} The idea is that , each of these EI {disfmarker} is {disfmarker} {vocalsound} represents what this would be {disfmarker} if all the other ones were in the distinguish state . Right ? So , for example , suppose that the person {disfmarker} I mean , suppose the thing that they talked about is a landmark . But none of the other {disfmarker} {vocalsound} sort of cues really apply . Then , {vocalsound} this would be {disfmarker} W The {vocalsound} this would just represent the probability distribution of this , assuming that this cue is turned on and the other ones just didn't apply ? So , you know , if it is a landmark , and no none of the other things really ap applicable , then {disfmarker} this would represent the probability distribution . So maybe in this case {disfmarker} {vocalsound} Maybe we just t k Maybe we decide that , if the thing 's a landmark and we don't know anything else , then we 're gonna conclude that , um {disfmarker} {vocalsound} They want to view it with probability , you know , point four . They want to enter it with probability , uh {disfmarker} with probability point five and they want to approach it probability point one , say {disfmarker} Right ? So we come up with these l little tables for each of those OK . And the final thing is that , um {disfmarker} {vocalsound} {vocalsound} this is a deterministic function of these , so we don't need to specify any probabilities . We just have to , um , say what function this is , right ? So we can let this be , um {disfmarker} {vocalsound} G of E - one comma E - two . E - three , E - four . Right ? and our example G would be , um , {vocalsound} a majority vote ? Right ?
Turn 520, B (Professor): Well . OK , so th so the important point {disfmarker} is {disfmarker} W not what the G function is . The important point is {disfmarker} that {disfmarker} Um {disfmarker} There is a {disfmarker} a {disfmarker} a general kind of idea of shortcutting the full CPT . Th - c the full conditional probability table {disfmarker} with some function . OK ? Which y w you choose appropriately for each case . So , depending on {vocalsound} what your situation is , there are different functions which are most appropriate . And {disfmarker} So I gave {disfmarker} eh {disfmarker} Bhaskara a copy of this , eh {disfmarker} sort of " ninety - two " {comment} paper . D and you got one , Robert .
Turn 521, D (Grad): Mm - hmm .
Turn 522, B (Professor): I don't know who else has seen it .
Turn 523, D (Grad): There 's {disfmarker} I mean {disfmarker} yeah . it 's Heckerman and Breese .
Turn 524, B (Professor): It 's short . It 's short .
Turn 525, D (Grad): Yeah .
Turn 526, B (Professor): So , I u w Um , yo uh {disfmarker} you {disfmarker} Have you read it yet ?
Turn 527, D (Grad): Uh , you can {disfmarker} Yeah , you should take a look at it , I guess .
Turn 528, A (Grad): OK
Turn 529, B (Professor): OK , so you should take a look . Nancy , I 'm sure you read it at some point in life .
Turn 530, E (Grad): I {disfmarker} yeah . I {disfmarker} I think so , yeah .
Turn 531, B (Professor): OK . And {disfmarker} so , you other guys can decide how interested {disfmarker}
Turn 532, E (Grad): Yeah , @ @ .
Turn 533, B (Professor): Anyway . So the paper isn't th isn't real hard .
Turn 534, F (PhD): OK .
Turn 535, B (Professor): And {disfmarker} {vocalsound} Uh {disfmarker} One of the questions just come at Bhaskara is , " How much of this does JavaBayes support ? "
Turn 536, D (Grad): Yeah , it 's a good question . Um {pause} {vocalsound} {nonvocalsound} The {disfmarker} so what we want , is basically JavaBayes to support deterministic , uh , functions .
Turn 537, B (Professor): Right .
Turn 538, D (Grad): And , um {disfmarker} {vocalsound} In a sense it sup we can make it supported by , um , {vocalsound} manually , uh , entering , you know , probabilities that are one and zeros , right ?
Turn 539, B (Professor): Right . So the little handout that {disfmarker} The little thing that I sent {disfmarker} I sent a message saying , uh , here is a way to take {disfmarker} One thing you could do , which is kind of s in a way , stupid , is take this deterministic function , and use it to build the CPT . So , if Ba - JavaBayes won't do it for you ,
Turn 540, C (Grad): Mmm .
Turn 541, B (Professor): that you can convert all that into what the CPT would be . Um {disfmarker} and , what I sent out about a week ago , was an idea of how to do that , for , um , evidence combination . So one of {disfmarker} one function that you could use as your " G function " is an e e Evidence - Combining . So you just take {vocalsound} the {disfmarker} uh , if each of th if each of the ones has its own little table like that , {vocalsound} then you could take the , uh , strength of each of those , times its little table , and you 'd add up the total evidence for " V " , " E " , and " A " .
Turn 542, D (Grad): Mmm . I don't think you can do this , because {disfmarker} {vocalsound} G is a function from {pause} that {vocalsound} to that .
Turn 543, E (Grad): Mm - hmm .
Turn 544, B (Professor): Yep . Right .
Turn 545, D (Grad): Right ? So there 's no numbers . There 's just {disfmarker} quadruplets of {disfmarker} well , N - duplets of , uh , E Vs .
Turn 546, B (Professor): I i i No , no {disfmarker} But I 'm saying is {disfmarker} There {disfmarker} {vocalsound} {vocalsound} There is a w I mean , if y if {disfmarker} if you decide what 's {disfmarker} what is appropriate , is probablistic evidence combination , you can write a function that does it . It 's a pui it 's actually one of the examples he 's got in there . But , anyway , s skipping {disfmarker} skipping the question of exactly which functions {disfmarker} now is it clear that you might like to be able to shortcut the whole conditional probability table .
Turn 547, C (Grad): I mean , in some {disfmarker} it seems very plausible in some sense , where we will be likely to not be {disfmarker} observe some of the stuff . Cuz we don't have the a access to the information .
Turn 548, D (Grad): Oops , {comment} sorry .
Turn 549, B (Professor): Right . That 's one of the problems , is , W Is {disfmarker} is , Where would th Where would it all come from ?
Turn 550, C (Grad): Yeah . So .
Turn 551, D (Grad): Is {disfmarker} Oh , right . W would not be ab able to observe
Turn 552, E (Grad): Mmm .
Turn 553, D (Grad): What ?
Turn 554, C (Grad): I if it 's a {disfmarker} a {disfmarker} a discar Discourse Initial Phrase , we will have nothing in the discourse history . So , if {disfmarker} if we ever want to wonder what was mention
Turn 555, D (Grad): Oh {disfmarker} Oh . A are you saying that we 'll not be able to observe certain nodes ? That 's fine . That is sort of orthogonal thing .
Turn 556, B (Professor): Yeah , so there 's {disfmarker} there 's two separate things , Robert . The f the {disfmarker} the {disfmarker} the Bayes - nets in general are quite good at saying , " if you have no current information about this variable just take the prior for that . " OK ? Th - that 's what they 're real good at . So , if you don't have any information about the discourse , you just use your priors of {disfmarker} of whatever {disfmarker} eh the {disfmarker} discourse {disfmarker} uh , eh , basically whatever w it 's {disfmarker} Probabilistically , whatever it would be . And it 's {disfmarker} it 's sort of not a great estimate ,
Turn 557, C (Grad): Mm - hmm .
Turn 558, B (Professor): but {disfmarker} it 's the best one you have , and , so forth . So that , they 're good at . But the other problem is , how do you fill in all these numbers ? And I think that 's the one he was getting at .
Turn 559, E (Grad): Mm - hmm .
Turn 560, D (Grad): Yeah . So , specifically in this case you have to {disfmarker} f have this many numbers ,
Turn 561, E (Grad): Yeah .
Turn 562, D (Grad): whereas in this case you just have to have three for this , three for this , three for this . Right ?
Turn 563, C (Grad): Mm - hmm .
Turn 564, D (Grad): So you have to have just three N ? So , this is much smaller than that .
Turn 565, A (Grad): Asymptotically .
Turn 566, E (Grad): Mm - hmm .
Turn 567, B (Professor): Well , pretty quickly .
Turn 568, D (Grad): Yeah . Right .
Turn 569, A (Grad): U yeah , yeah .
Turn 570, B (Professor): I mean {disfmarker}
Turn 571, E (Grad): So , you don't need da data enough to cover {disfmarker} uh , nearly as much stuff .
Turn 572, D (Grad): I don't know .
Turn 573, A (Grad): So , really , i What a {disfmarker} A Noisy - OR seems to kind of {pause} " neural - net - acize " these Bayes - nets ?
Turn 574, B (Professor): Eh {disfmarker} well to some No , no . So , " Noisy - OR " is a funny way of referring to this , because {vocalsound} the Noisy - OR is only one instance .
Turn 575, D (Grad): Yeah . This isn't a Noisy - OR anymore .
Turn 576, B (Professor): That one actually isn't a Noisy - OR . So we 'll have to think of {vocalsound} of a way t t
Turn 577, A (Grad): Yeah .
Turn 578, D (Grad): it 's a Noisy - arg - max or a Noisy - whatever .
Turn 579, B (Professor): Yeah , whatever . Yeah . So {disfmarker} Eh {disfmarker} {comment} Um
Turn 580, A (Grad): Well , my point was more that we just {disfmarker} eh {disfmarker} With the neural net , right , eh , things come in , you have a function that combines them and {disfmarker}
Turn 581, B (Professor): Yeah , it {disfmarker} it {disfmarker} Tha - that 's true . It is a is also more neural - net - like , although {disfmarker} {vocalsound} Uh , it isn't necessarily sum {disfmarker} uh , s you know , sum of weights or anything like that .
Turn 582, A (Grad): Right .
Turn 583, B (Professor): I mean i You could have , uh , like the Noisy - OR function , really is one that 's essentially says , uh , take the max .
Turn 584, D (Grad): Well , the " OR " .
Turn 585, B (Professor): Same .
Turn 586, D (Grad): Right . I guess you 're right . Yeah .
Turn 587, B (Professor): Uh But anyway . So {disfmarker} And , I thi I think that 's the standard way people get around the {disfmarker} uh There are a couple other ones . There are ways of breaking this up into s to {disfmarker} to subnets and stuff like that . But , um The I think we definitely {disfmarker} I think it 's a great idea tha to {disfmarker} to pursue that .
Turn 588, D (Grad): Yep . So
Turn 589, C (Grad): Wha - still sort of leaves one question . It {disfmarker} I mean you {disfmarker} you can always uh {disfmarker} see easily that {disfmarker} that I 'm not grasping everything correctly , but {vocalsound} what seemed attractive to me in im uh in the last discussion we had , was {vocalsound} that we find out a means of {disfmarker} of getting these point four , point five , point one , of C - four , not because , you know , A is a Landmark or not , but we {disfmarker} we {disfmarker} we label this whatever object type , and if it 's a garden , it 's point three , point four , point two . If it 's a castle , it 's point eight , point one , point one . If it 's , {vocalsound} uh , a town hall , it 's point two , point three , point five .
Turn 590, B (Professor): Right .
Turn 591, C (Grad): And so forth . And we don't want to write this down {disfmarker} necessarily every time for something but , uh {disfmarker} let 's see .
Turn 592, D (Grad): It 'll be students {disfmarker} Where else would it be stored ? That 's the question .
Turn 593, C (Grad): Well , in the beginning , we 'll write up a flat file .
Turn 594, B (Professor): Oh .
Turn 595, C (Grad): We know we have twenty object types
Turn 596, B (Professor): Yeah .
Turn 597, C (Grad): and we 'll write it down in a flat file .
Turn 598, B (Professor): No . So , i is Well , let me say something , guys , cuz there 's not {disfmarker} There 's a pretty point about this we might as well get in right now . Which is {disfmarker} The hierarchy that s comes with the ontology is just what you want for this .
Turn 599, D (Grad): Mm - hmm .
Turn 600, B (Professor): So that {disfmarker} {vocalsound} Uh , if you know about it {disfmarker} let 's say , a particular town hall {disfmarker} {vocalsound} that , it 's one that is a monument , {vocalsound} then , that would be stored there . If you don't , you look up the hierarchy , Eh {disfmarker} so , you {disfmarker} you {disfmarker} you may or {disfmarker} So , then you 'd have this little vector of , um , you know , Approach Mode or EVA Mode . Let 's {disfmarker} OK , so we have {vocalsound} the EVA vector for {disfmarker} for various kinds of landmarks . If you know it for a specific landmark you put it there . If you don't , you just go up the hierarchy to the first place you find one .
Turn 601, D (Grad): OK . So , is the idea to put it in the ontology ?
Turn 602, B (Professor): Absolutely .
Turn 603, D (Grad): OK .
Turn 604, B (Professor): Uh , or , link to {disfmarker} or {disfmarker} but {disfmarker} but in any case {disfmarker} i View it logically as being in the ontology . It 's part of what you know about {disfmarker} a {disfmarker} an object , {vocalsound} is its EVA vector .
Turn 605, D (Grad): OK .
Turn 606, B (Professor): And , if yo As I say , if you know about a specific object , you put it there .
Turn 607, D (Grad): Mm - hmm .
Turn 608, B (Professor): This is part of what Dekai was doing . So , when we get to Wu , The - e We 'll see w what he says about that .
Turn 609, D (Grad): Right .
Turn 610, B (Professor): And , then if you {disfmarker} If it isn't there , it 's higher , and if you don't know anything except that it 's a b it 's {disfmarker} it 's a {disfmarker} building , then up at the highest thing , you have the pr what amounts to a prior . If you don't know anything else about a building , {vocalsound} uh , you just take whatever your crude approximation is up at that level ,
Turn 611, D (Grad): Right .
Turn 612, B (Professor): which might be equal , or whatever it is .
Turn 613, D (Grad): Yeah .
Turn 614, B (Professor): So , that 's a very pretty relationship between these local vectors and the ontology . And it seems to me the obvious thing to do , unless {vocalsound} we find a reason to do something different .
Turn 615, D (Grad): Yeah .
Turn 616, B (Professor): Does this make sense to you ?
Turn 617, D (Grad): So {disfmarker}
Turn 618, B (Professor): Bhask - ?
Turn 619, D (Grad): Yeah . So , we are {disfmarker} but we {disfmarker} we 're not doing the ontology , so we have to get to whoever is doing the {disfmarker} u ultimately ,
Turn 620, B (Professor): Indeed . So , that 's another thing we 're gonna need to do , is {disfmarker} is , to , either {disfmarker}
Turn 621, D (Grad): we have to get them to {disfmarker}
Turn 622, B (Professor): We 're gonna need some way to either get a p tag in the ontology , or add fields , or {disfmarker} {comment} {comment} {vocalsound} some way to associate {disfmarker} Or , w It may be that all we can do is , um , some of our own hash tables that it {disfmarker} Th - the {disfmarker} th you know , there 's always a way to do that . It 's a just a question of {disfmarker}
Turn 623, A (Grad): Yeah , hash on object name to , you know , uh , the probabilities or whatever .
Turn 624, B (Professor): i th Yeah . e Right . And , so , i uh {disfmarker}
Turn 625, C (Grad): But it 's , uh {disfmarker} {vocalsound} Well , it strikes me as a What For If we get the mechanism , that will be sort of the wonderful part . And then , {vocalsound} how to make it work is {disfmarker} is the second part , in the sense that {disfmarker} I mean , m the guy who was doing the ontology {disfmarker} eh , eh , s ap apologized that i it will take him another through {disfmarker} two to three days because they 're having really trouble getting the upper level straight , and right now . The reason is , {vocalsound} given the craw bet uh , the {disfmarker} the {disfmarker} the projects that all carry their own taxonomy and , on all history , {vocalsound} they 're really trying to build one top level ontology ft that covers all the EML projects , and that 's , uh , uh , sort of a tough cookie , a little bit tougher than they {vocalsound} figured . I could have told them s so .
Turn 626, B (Professor): Right . Yeah .
Turn 627, C (Grad): Uh . But , nevertheless , it 's going to be there by n by , uh , next Monday and I will show you what 's {disfmarker} what some examples {vocalsound} from that for towers , and stuff . And , um , what I don't think is ever going to be in the ontology , is sort of , you know , the likelihood of , eh , people entering r town halls , and looking at town halls , and approaching town halls , especially since we are b dealing with a case - based , not an instance - based ontology . So , there will be nothing on {disfmarker} on that town hall , or on the Berkeley town hall , or on the {vocalsound} Heidelberg town hall , it 'll just be information on town halls .
Turn 628, B (Professor): Well , they {disfmarker} they {disfmarker} they {disfmarker} How ar What are they gonna do with instances ?
Turn 629, C (Grad): But what {disfmarker}
Turn 630, B (Professor): I mean , you {disfmarker} y
Turn 631, C (Grad): Well , that 's {disfmarker} Hhh . That 's {disfmarker} that 's al different question . I mean , th the {disfmarker} first , they had to make a design question , {vocalsound} " do we take ontologies that have instances ? or just one that does not , that just has the types ? "
Turn 632, B (Professor): OK .
Turn 633, C (Grad): And , so , since the d decision was on types , on a d simply type - based , {vocalsound} we now have to hook it up to instances . I mean this is
Turn 634, B (Professor): But what i What is SmartKom gonna do about that ?
Turn 635, C (Grad): one {disfmarker}
Turn 636, B (Professor): Cuz , they have instances all the time .
Turn 637, C (Grad): Yeah , but the ontology is really not a SmartKom thing , in {disfmarker} in and of itself . That 's more something that {vocalsound} I kicked loose in {disfmarker} in EML . So it 's a completely EML thing .
Turn 638, B (Professor): But {disfmarker} Uh {disfmarker} uh {disfmarker} SmartKom 's gonna need an ontology .
Turn 639, C (Grad): Yes , u a w a lot of people are aware of that .
Turn 640, B (Professor): I understand , {vocalsound} but is anybody doing anything about it ?
Turn 641, C (Grad): Um {disfmarker}
Turn 642, B (Professor): OK . It 's a political problem . We won't worry about it .
Turn 643, C (Grad): No , but {disfmarker} th the r eh {disfmarker} I th I still think that there is enough information in there . For example , whether {disfmarker} OK . So , th it will know about the twenty object types there are in the world . Let 's assume there are only twenty object types in this world . And it will know if any of those have institutional meanings . So , in a sense , " I " used as Institutions for some s in some sense or the other . Which makes them {disfmarker} enterable . Right ? In a sense .
Turn 644, B (Professor): Yeah . Anyway . So we may have to {disfmarker}
Turn 645, C (Grad): You know .
Turn 646, B (Professor): This is with the whole thing ,
Turn 647, C (Grad): Yep .
Turn 648, B (Professor): we may have to build another data stru
Turn 649, C (Grad): Yep .
Turn 650, B (Professor): Conceptually , we know what should be done . When we see what people have done , it may turn out that the easiest thing to do {vocalsound} is to build a {disfmarker} a separate thing that {disfmarker} that just pools i i Like , i i it {disfmarker} it may be , that , the {disfmarker} the instance {disfmarker} w That we have to build our own instance , uh , things , that , with their types ,
Turn 651, D (Grad): Yeah , it 's {disfmarker} Right , we can just assume {disfmarker}
Turn 652, B (Professor): and then it goes off to the ontology once you have its type . So we build a little data structure And so what we would do in that case , is , in our instance gadget have {vocalsound} our E V And if we d there isn't one we 'd get the type and then have the E V As for the type . So we 'd have our own little , {vocalsound} uh , EVA tree . And then , for other , uh , vectors that we need .
Turn 653, D (Grad): Yeah . Right .
Turn 654, B (Professor): So , we 'd have our own little {vocalsound} things so that whenever we needed one , we 'd just use the ontology to get the type ,
Turn 655, D (Grad): Mm - hmm .
Turn 656, B (Professor): and then would hash or whatever we do to say , " ah !
Turn 657, D (Grad): Mm - hmm .
Turn 658, B (Professor): If it 's that type of thing , and we want its EVA vector , pppt - pppt ! {comment} it 's that . " So , I I think we can handle that . And then {disfmarker} But , the combination functions , and whether we can put those in Java Bayes , and all that sort of stuff , is , uh {disfmarker} is the bigger deal .
Turn 659, D (Grad): Yeah .
Turn 660, B (Professor): I think that 's where we have to get technically clever .
Turn 661, A (Grad): We could just steal the classes in JavaBayes and then interface to them with our own code .
Turn 662, D (Grad): Um {disfmarker}
Turn 663, B (Professor): Well , I me ye {nonvocalsound} eh , yeah , the {disfmarker}
Turn 664, D (Grad): That requires understanding the classes in JavaBayes , I guess . @ @ .
Turn 665, B (Professor): Yeah , I mean , it 's , uh , e e e e e cute . I mean , you 've been around enough to {disfmarker} I mean {disfmarker} Just ?
Turn 666, A (Grad): Well , it depends on {disfmarker}
Turn 667, B (Professor): I mean , there 's this huge package which {disfmarker} which may or may not be consistent and {disfmarker} you know . But , yeah , we could look at it .
Turn 668, A (Grad): Well , I was j OK . Yeah .
Turn 669, B (Professor): Yeah . It 's b It {disfmarker} It 's an inter sort of a kind of a {disfmarker} it {disfmarker} The thing is , it 's kind of an interpreter and i i it expects its data structures to be in a given form , and if you say , " hey , we 're gonna {vocalsound} make a different kind of data structure to stick in there {disfmarker} "
Turn 670, A (Grad): Well , no , but that just means there 's a protocol , right ? That you could {disfmarker}
Turn 671, B (Professor): It may or may not . I don't know . That 's the question is " to what extent does it allow us to put in these G functions ? " And I don't know .
Turn 672, A (Grad): Well , no , but {disfmarker} I mean {disfmarker} What I uh the {disfmarker} So you could have four different Bayes - nets that you 're running , and then run your own {disfmarker} write your own function that would take the output of those four , and make your own " G function " , is what I was saying .
Turn 673, B (Professor): Yeah , that 's fine if it 's {disfmarker} if it comes only at the end . But suppose you want it embedded ?
Turn 674, A (Grad): Well , then you 'd have to break all of your Bayes - nets into smaller Bayes - nets , with all the {disfmarker}
Turn 675, B (Professor): Oh , that {disfmarker} Yeah , that 's a truly horrible way to do d it . One would hope {disfmarker}
Turn 676, A (Grad): Yeah , but I 'm just {disfmarker}
Turn 677, C (Grad): Mm - hmm .
Turn 678, B (Professor): Yeah , yeah , yeah , yeah , yeah , you bet . But , at that point you may say , " hey , Java Bayes isn't the only package in town . Let 's see if there 's another package that 's , eh , more civilized about this . "
Turn 679, D (Grad): 
Turn 680, B (Professor): Now , Srini is worth talking to on this ,
Turn 681, D (Grad): Mmm .
Turn 682, B (Professor): cuz he said that he actually did hack some combining functions into But he doesn't remember {disfmarker} at least when I talked to him , he didn't remember {vocalsound} whether it was an e an easy thing , a natural thing , or whether he had to do some violence to it to make it work .
Turn 683, D (Grad): Ah !
Turn 684, B (Professor): Uh . But he did do it .
Turn 685, D (Grad): Yeah . I don't see why the , uh , combining f functions have to be directly hacked into I mean , they 're used to create tables so we can just make our own little functions that create tables in XML .
Turn 686, B (Professor): Well , I say that 's one way to do it , is {disfmarker} is to just convert it int into a {disfmarker} into a C P T that you zip {disfmarker} It 's blown up , and is a {disfmarker} it 's , uh {disfmarker} it 's huge , but {disfmarker} {vocalsound} it doesn't require any data fitting or complication .
Turn 687, D (Grad): Mm - hmm . Yeah . I don't think {disfmarker} I mean , the fact that it blown u blows up is a huge issue in the sense that {disfmarker} I mean , OK . So say it blows up , right ? So there 's , like , the you know , ten , f ten , fifteen , uh , things . It 's gonna be like , two to the {disfmarker} that , which isn't so bad .
Turn 688, B (Professor): I I understand . I 'm just saying tha that w That was wi that was my note . The little note I sent said that . It said , " Here 's the way you 'd take the logical f G function and turn it into a CPT . "
Turn 689, D (Grad): Mm - hmm . Mm - hmm .
Turn 690, B (Professor): I mean that {disfmarker} the Max - the Evidence - Combining function . So we could do that . And maybe that 's what we 'll do . But , um don't know . So , I will , e {vocalsound} e before next week , uh , @ @ {comment} p push {disfmarker} push some more on {disfmarker} on this stuff that Dekai Wu did , and try to understand it . Uh , you 'll make a couple of more copies of the Heckerman paper to give to people ?
Turn 691, D (Grad): p Sure .
Turn 692, F (PhD): Yeah , I {disfmarker} I would like a copy ,
Turn 693, B (Professor): OK .
Turn 694, D (Grad): OK .
Turn 695, F (PhD): y y yeah .
Turn 696, B (Professor): And , um
Turn 697, F (PhD): OK .
Turn 698, B (Professor): I think {disfmarker}
Turn 699, C (Grad): OK . And I I 'll {disfmarker} I 'll think s through this , uh , {vocalsound} eh {disfmarker} getting EVA vectors dynamically out of ontologies one more time because I s I {disfmarker} I {disfmarker} I 'm not quite sure whether we all think of the same thing or not , here .
Turn 700, B (Professor): Well , you and I should talk about it .
Turn 701, C (Grad): Yeah , uh - huh . OK .
Turn 702, B (Professor): Alright , great ! And , Robert , thank you for {vocalsound} coming in under {disfmarker} He {disfmarker} he 's been sick , Robert .
Turn 703, C (Grad): Und .
Turn 704, A (Grad): I was thinking maybe we should just cough into the microphone and see if they can't {disfmarker} th see if they can handle it .
Turn 705, E (Grad): Mm - hmm .
Turn 706, D (Grad): Yep .
Turn 707, E (Grad): Sure .
Turn 708, C (Grad): Um {disfmarker} is this , uh {disfmarker}
